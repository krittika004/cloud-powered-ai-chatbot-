# -*- coding: utf-8 -*-
"""Updated_Cloud_Powered_Chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s2Tvq3WfzmTTpSZOVee2s5mRYdrOLqOy
"""

#pip install openai boto3 gradio

#pip install --upgrade openai gradio

#pip install python-dotenv

def chatbot_response(user_input):
    response = openai.ChatCompletion.create(
        model="gpt-4",  # Change to your preferred model
        messages=[{"role": "user", "content": user_input}]
    )
    return response["choices"][0]["message"]["content"]

import boto3
import time
import os

# Load AWS credentials
AWS_REGION = "us-east-1"  # Change if needed

# Initialize DynamoDB connection with region
dynamodb = boto3.resource(
    "dynamodb",
    region_name=AWS_REGION,


def save_chat(message, response):
    table = dynamodb.Table("ChatHistory")

    table.put_item(
        Item={
            "timestamp": int(time.time()),  # Use a timestamp to keep messages in order
            "user_message": message,
            "bot_response": response
        }
    )

print("DynamoDB connected successfully!")

import boto3
import time
import os

def save_chat(message, response):
    table = dynamodb.Table("ChatHistory")

    table.put_item(
        Item={
            "timestamp": int(time.time()),  # Use a timestamp to keep messages in order
            "user_message": message,
            "bot_response": response
        }
    )

print("DynamoDB connected successfully!")

import gradio as gr
import openai
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()



def chatbot_response(user_input):
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[{"role": "user", "content": user_input}]
    )
    return response["choices"][0]["message"]["content"]

# Gradio Interface
iface = gr.Interface(
    fn=chatbot_response,
    inputs=gr.Textbox(label="Your Message"),
    outputs=gr.Textbox(label="Chatbot Response"),
)

iface.launch(debug=True)

